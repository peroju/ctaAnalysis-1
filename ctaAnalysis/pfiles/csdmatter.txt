
csdmatter
=========

Computes UL on annihilation cross-section for a family of masses of dark matter particles


Synopsis
--------

This script computes the upper-limits (for a given confidence level)
on annihilation cross-section or decay lifetime of dark matter particles.
Given an observation, a DM model is fitted, then the TS is computed using
ctlike. If is specified by the user, csdmatter also computes the upper-limit on the flux, then translated into an upper-limit on the annihilation cross-section of dark matter particles. This process is performed over different masses (separated logarithmically -mass points-) of dark matter particles. In order to generate all the moodels (using gammalib GModels), the script asks for the annihilation cross-section and the astrophysical factor to compute the flux, that is obtained from interpolation tables from the PPPC4DMID project. The user can also pass the redshift at which the photons are emitted, then the script also add the effect of the EBL attenuation using the ebl-table project.

For every mass point, th csdmatter app save:

- Reference energy at which the flux and upper-limit are computed
- Mass of dark matter particle
- Flux at Reference energy
- Flux error
- TS
- Differential flux upper-limmit
- Scale factor
- Annihilation cross-section used to compute gamma-ray flux from dark matter annihilations (reference cross-section)
- Annihilation cross-section obtained from Scale factor times reference cross-section

The collection of results for n mass points are saved into a fits file.

Please note that the csdmatter app does not ask for XML observation model as input parameter. In fact, all models are created during execution time, so there is not necessary for the user to create a lot of XML files to describe models.

At this moment, csdmatter only compute for annihiation.

For more information refer to ctaAnalysis project or send an email to:
skerzot@ciencias.unam.mx

(Judit, Miguel, Sergio)
The DMTaskForce

General parameters
------------------

inobs [file]
    Input event list, counts cube or observation definition XML file.

srcname [string]
    Name of the source in the source model XML file which should be used
    for spectrum generation.

expcube [file]
    Input exposure cube file.

psfcube [file]
    Input PSF cube file.

edispcube [file]
    Input energy dispersion cube file.

bkgcube [file]
    Input background cube file.

caldb [string]
    Calibration database.

irf [string]
    Instrumental response function.

(edisp = no) [boolean]
    Apply energy dispersion to response computation?

mmin [real] <100->
    Minimum value of dark-matter mass in GeV

mmax [real] <-1.e+5>
    Maximum value of dark-matter mass in GeV

mnumpoints [integer] <1-100>
    Number of dark-matter mass bins to perform the analysis. Note that the mass points are separated logarithmically

process [string] <ANNA>
    Dark-matter interaction

channel [string] <b|Mu|Tau|t|W|Z>
    Available channel to compute gamma-ray flux from process. Calculations are performed using interpolation of PPPC4DMID tables: http://www.marcocirelli.net/PPPC4DMID.html

ewcorrections [boolean]
    Include Electro-weak correction when computing gamma-ray flux?

logsigmav [real] <-35.0 - -10.0>
    Logarithm of annihilation cross-section (in cm**3/s)

logastfactor [real]
    Logarithm of astrophysica factor (in GeV**2/cm**5)

redshift [real] <0-2(Â¿?)>
    Redshift at which photons are emmited

eblmodel [real]<dominguez,franceschini|franceschini2017|kneiske|finke|dominguez|inuoe|gilmore>
    EBL model to take into accout attenuation due to redshift. Calculations are performed using ebl-table project (https://github.com/me-manu/ebltable)

emin [real] <30->
    Start value for dark matter flux in GeV

emax [real] <-1.e+5>
    Stop value for dark matter flux in GeV

modtype [string] <PointSource|DiffuseSource> 
    Select the Model type specifier to generate GModels
ra [real] <-360 - 360>
    Right Ascension in degrees
dec [real] <-90 - 90>
    Declination in degrees
map_fits,      f, a, PerseusMap.fits,,, 
    Spatial Template to describe gamma-ray emission

outfile [file]
    Output spectrum FITS file.

(statistic = DEFAULT) <DEFAULT|CSTAT|WSTAT|CHI2> [string]
    Optimization statistic. DEFAULT uses the default statistic for all
    observations, which is CSTAT or the statistic specified in the
    observation definition XML file. CSTAT uses the C statistic for
    all observations, WSTAT uses the W statistic for all On/Off
    observations, and CHI2 uses the Chi squared statistic for all
    binned or stacked observations.

(calc_ts = yes) [boolean]
    Compute TS for each spectral point?

(calc_ulim = yes) [boolean]
    Compute upper limit for each spectral point?

(fix_srcs = yes) [boolean]
    Fix other sky model parameters?

(fix_bkg = no) [boolean]
    Fix background model parameters?


Standard parameters
-------------------

(nthreads = 0) [integer]
    Number of parallel processes (0=use all available CPUs).

(publish = no) [boolean]
    Specifies whether the spectrum should be published on VO Hub.

(chatter = 2) [integer]
    Verbosity of the executable:
     chatter = 0: no information will be logged

     chatter = 1: only errors will be logged

     chatter = 2: errors and actions will be logged

     chatter = 3: report about the task execution

     chatter = 4: detailed report about the task execution

(clobber = yes) [boolean]
    Specifies whether an existing source spectrum output file should be
    overwritten.

(debug = no) [boolean]
    Enables debug mode. In debug mode the executable will dump any log file
    output to the console.

(mode = ql) [string]
    Mode of automatic parameters (default is ql, i.e. "query and learn").

(logfile = csdmatter.log) [filename]
    Log filename.


Related tools or scripts
------------------------

ctlike , ctulimit
